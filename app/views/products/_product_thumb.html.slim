.product-thumbnail class=('featured-thumbnail' if (product.class.name != 'FriendProduct' && product.featured?))
  .image-container
    - if (product.class.name != 'FriendProduct' && product.featured?)
      = image_tag product.image.to_s, class: 'is-hidden-mobile' if product.image
      = image_tag product.image_alt1.to_s, class: 'is-mobile is-hidden-tablet' if product.image_alt1
    - else
      = image_tag product.image.to_s if product.image
  .content-container
    .heading-text
      .mytitle.has-text-centered = product.title
      - if product.partner_name.present?
        .by.has-text-centered
          = "by #{product.partner_name.upcase}"
    .mydescription.has-text-centered = raw product.description.gsub(/\n/, '<br/>')
    .has-text-centered
      - if product.class.name == 'FriendProduct'
        = link_to product.partner_link, target: '_blank', onclick: "return trackOutboundLink('#{product.partner_link}', true)" do
          .buy-button
            = "BUY "
            span.price = "#{product.price}"
      / - else
        - if product.native_store
          div class=('is-hidden' if !@cart.product_in_cart(product.id))
            = link_to remove_cart_path(product.id), method: :delete, remote: true, class: 'remove-from-cart'
              .buy-button
                span.button-text = "REMOVE FROM CART "
                span.price = "R#{product.price}"
          div class=('is-hidden' if @cart.product_in_cart(product.id))
            = link_to add_cart_path(product.id), method: :post, remote: true, class: 'add-to-cart'
              .buy-button
                - if product.preorder?
                  span.button-text = "PREORDER | ADD TO CART "
                - else
                  span.button-text = "ADD TO CART "
                span.price = "R#{product.price}"

        / - else
          = link_to product.partner_link, target: '_blank', onclick: "return trackOutboundLink('#{product.partner_link}', true)" do
            .buy-button
              = "AVAILBLE HERE"
              - if product.price > 0
                span.price = " R#{product.price}"

